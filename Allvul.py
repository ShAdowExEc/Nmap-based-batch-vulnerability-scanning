import nmap
from urllib.parse import urlparse
import sys
import argparse

domains='domain.txt'
result='resultall.txt'

parser = argparse.ArgumentParser(description='by Shadowexec-基于nmap对多个目标单种漏洞进行批量扫描  [eg: python Allvul.py -add  "--script ssl-enum-ciphers -PN -sT localhost"]')
    
parser.add_argument('-add', dest='add', type=str, help='添加某种漏洞扫描脚本和解决系统代理下nmap报错问题(eg:--script ssl-enum-ciphers -PN -sT localhost)', default=True)
  
args = parser.parse_args(sys.argv[1:])
 
_add=args.add

def write(file,text):
    with open(file, "a", encoding='utf-8',newline='') as f:
      f.write(text)


def check(ip,port,ad):
    flag='false'
    n=nmap.PortScanner()
    result=n.scan(hosts='{}'.format(ip), ports='{}'.format(port), arguments='{}'.format(ad))

    if('vulnerable' in str(result['scan'][ip]['tcp'][port])):
        flag='true'
    if('no-response' in str(result['scan'][ip]['tcp'][port])):
         flag='down'
    return flag
with open(domains, "r", encoding='utf-8') as f:

    urls = f.readlines()
    for urli in urls:
        url=urli.strip()
        print(url)
        try:
            
            _url = urlparse('http://'+url)
            hostname = _url.hostname
            port = _url.port
            flag=check(hostname,port,_add)
            if(flag=='true'):
                    write(result,url+' '+' ---vulnerable'+"\r\n")
            elif(flag=='false'):
                    write(result,url+' '+' ---not vulnerable'+"\r\n")
            elif(flag=='down'):
                    write(result,url+' '+' ---target down'+"\r\n")
        except Exception as e:
            write(result,url+' '+' ---connection error'+"\r\n")
            print(e)
